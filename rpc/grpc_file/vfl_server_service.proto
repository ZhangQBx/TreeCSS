syntax = "proto3";

message lr_train_forward_request{
  int32 cid = 1;
  int32 batch_index = 2;
  //  bytes forward_result = 4;
  repeated float forward_result = 3;
}

message lr_train_forward_response{
  int32 cid = 1;
//  bytes batch_gradient = 2;
  repeated float batch_gradient = 2;
  bool early_stop = 3;
}

message lr_test_forward_request{
  int32 cid = 1;
  int32 batch_index = 2;
  //  bytes test_forward = 3;
  repeated float test_forward = 3;
}

message lr_test_forward_response{
  int32 cid = 1;
  bool continue_iter = 2;
}

message mlp_train_bottom_forward_request{
  int32 cid = 1;
  int32 batch_index = 2;
  int32 epoch = 3;
//  bytes bottom_forward = 4;
  repeated internal_bottom_forward bottom_forward = 4;
}

message mlp_train_batch_gradient_response{
  int32 cid = 1;
//  bytes batch_gradient = 2;
  repeated internal_split_grad batch_gradient = 2;
  bool early_stop = 3;
}

message mlp_test_bottom_forward_request{
  int32 cid = 1;
  int32 batch_index = 2;
//  bytes bottom_forward = 3;
  repeated internal_bottom_forward bottom_forward = 3;
}

message mlp_test_bottom_forward_response{
  int32 cid = 1;
  bool continue_iter = 2;
}

message internal_bottom_forward{
  repeated float forward = 1;
}

message internal_split_grad{
  repeated float grad = 1;
}

message knn_distance_request{
  int32 cid = 1;
//  bytes index = 2;
  int32 index = 2;
//  bytes dist = 3;
  repeated float dist = 3;
}

message knn_distance_response{
  int32 cid = 1;
  bool continue_iter = 2;
}

message client_psi_status_request{
  int32 cid = 1;
  int32 qid = 2;
  repeated string vfl_client_status = 3;
  int32 data_length = 4;
  bool carry_psi_final_result = 5;
  bytes psi_final_result = 6;
}

message vfl_server_psi_status_response{
  int32 cid = 1;
  int32 qid = 2;
  repeated string vfl_server_status = 3;
  bool carry_psi_final_result = 4;
  bytes psi_final_result = 5;
}

message label_owner_psi_result_request{
  int32 cid = 1;
  bool is_label_owner = 2;
}

message vfl_server_psi_result_response{
  int32 cid = 1;
  bytes psi_final_result = 2;
}

message client_cluster_info_request{
  int32 cid = 1;
//    bytes cluster_label = 2;
  repeated int32 cluster_label = 2;
//    bytes distance = 3;
  repeated float cluster_distance = 3;
//  bytes data_weight = 4;
  repeated float data_weight = 4;
}

message vfl_server_align_index_response{
  int32 cid = 1;
  //  bytes align_index = 2;
  repeated int32 align_index = 2;
}

message kmeans_finish_request{
  int32 cid = 1;
  bool kmeans_finish = 2;
}

message kmeans_finish_response{
  int32 cid = 1;
  bool psi_permission = 2;
}


service VFLServerService{
  rpc gather_lr_train_forward(lr_train_forward_request) returns (lr_train_forward_response);
  rpc gather_lr_test_forward(lr_test_forward_request) returns (lr_test_forward_response);

  rpc gather_mlp_train_bottom_forward(mlp_train_bottom_forward_request) returns (mlp_train_batch_gradient_response);
  rpc gather_mlp_test_bottom_forward(mlp_test_bottom_forward_request) returns (mlp_test_bottom_forward_response);

  rpc gather_knn_distance(knn_distance_request) returns(knn_distance_response);

  rpc get_vfl_server_psi_status(client_psi_status_request) returns (vfl_server_psi_status_response);
  rpc get_label_owner_psi_result(label_owner_psi_result_request) returns (vfl_server_psi_result_response);
  rpc get_client_align_index(client_cluster_info_request) returns (vfl_server_align_index_response);

  rpc invite_label_owner_psi_server(kmeans_finish_request) returns (kmeans_finish_response);
}